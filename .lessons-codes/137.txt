Section 26 : Authorization, Policies, Gates
#137. Policies introduction
------------------------------------------------
*important : Read notes before write 

[1] php artisan make:policy BlogPostPolicy --model=BlogPost

[2] App\Providers\AuthServiceProvider

... boot(){
   ...

   // 1.method
   // Gate::define('update-post', function($user, $post){
   //     return $user->id === $post->id;
   // });

   // Gate::define('delete-post', function($user, $post){
   //     return $user->id === $post->id;
   // });

   // 2.method
   // Gate::define('posts.update', 'App\Policies\BlogPostPolicy@update');
   // OR
   // Gate::define('posts.update', [BlogPostPolicy::class, 'delete']);

   // 3.method
   Gate::resource('posts', BlogPostPolicy::class);

   Gate::before(function($user, $ability){
      if($user->is_admin && in_array($ability, ['posts.update'])){
            return true;
      }
   });

   // Gate::after(function($user){
   //     if($user->is_admin){
   //         return true;
   //     }
   // });
}

[3] App\Policies\BlogPostPolicy

... update(){

   dd('updating');
   ...
}
... delete(){
   dd('deleting');
   ...
}

[4] App\Http\Controllers\BlogPostController

... create(){
   
   $this->authorize('posts.create');

   ...
}






Notes : 